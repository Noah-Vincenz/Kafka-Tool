ktor {
    development = true
    environment = "E0"
    environment = ${?ENV} ## in case E1 has been set
    restapi.endpoint = "http://localhost:8090/topics"
    restapi.endpoint = ${?REST_API_URL}
    deployment {
        port = 9080
        port = ${?PORT}
    }
    application {
        modules = [ ApplicationKt.module ]
    }
    security {
        ssl {
            keyStore = /etc/paas/openshift/certs/somekeystorefile.jks
            keyAlias = myalias
            keyStorePassword = client
            privateKeyPassword = client
        }
    }
    kafka {
        producer {
          client.id = "kafka-producer"
          bootstrap.servers = ["kafka1:9092", "kafka2:9091", "kafka3:9093"]
          kafka_server_e1 = ["e1kafkaserver:portnumber"]
          APIGEE_CLIENT_ID = ${apigeeClientId}
          APIGEE_CLIENT_SECRET = ${apigeeClientSecret}
          APIGEE_ENDPOINT = "apigeeendpointurl"
          crypto_key_serializer = "org.apache.kafka.common.serialization.ByteArraySerializer"
          crypto_value_serializer = "org.apache.kafka.common.serialization.ByteArraySerializer"
          key_serializer_class_config = "someotherserializer"
          value_serializer_class_config = "someotherserializer"
          acks_config = "-1" ## 0=none, 1=leader, -1=all
          topic_encryption_enabled = "true"
          security_encryption_enabled = "true"
          security_protocol_config = "SSL"
          ssl_truststore_location_config=${kafkaKeystorePath}/kafka-client-new-truststore.jks
          ssl_truststore_password_config=${kafkaTruststorePassword}
          ssl_keystore_location_config=${kafkaKeystorePath}/${kafkaKeystoreFile}
          ssl_keystore_password_config=${kafkaKeystorePassword}
          ssl_key_password_config=${kafkaKeyPassword}

          #Below property is to use OPENSSL for encryption. By default BouncyCastle is used. This feature is available only for versions 2.5-RELEASE and above
          #This path is the folder where libcrypto.so and libhiped.so files are located. In epaas environments the so files are readily available at opt/crypto/hiped.
          #for environments other than epaas, you need to copy the .so files on to the server and provide the path in below variable.
          #OPENSSL_SO_FILE_PATH=/opt/crypto/hiped

          #Below Property is to disable encryption for a particular topic. by default value is true. For this to work, the producer should also disable encryption
          #If encryption is disabled, then you don't have to provide KEY_IDENTIFIER, APIGEE_CLIENT_ID, APIGEE_SECRET, and APIGEE_ENDPOINT
          #{topic_name}_ENCRYPTION_ENABLED=false
        }
    }
}
